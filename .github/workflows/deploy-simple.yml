name: Deploy to Production (Simplified)

on:
  workflow_dispatch:  # Manual trigger only
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST || '4.240.101.137' }}
        username: ${{ secrets.USERNAME || 'azureuser' }}  
        key: ${{ secrets.SSH_KEY }}
        port: 22
        command_timeout: 15m
        script: |
          cd /home/azureuser/Omyra-Project_Management
          
          # Pull latest changes
          git pull origin main
          
          # Create basic environment file
          cat > .env << EOF
          MONGODB_URI=mongodb://mongodb:27017/omyra-project-nexus
          JWT_SECRET=temporary-jwt-secret-change-in-production-$(date +%s)
          JWT_EXPIRES_IN=7d
          PORT=5000
          NODE_ENV=production
          FRONTEND_URL=http://pms.omyratech.com
          EMAIL_HOST=smtp.gmail.com
          EMAIL_PORT=587
          EMAIL_SECURE=true
          EMAIL_USER=test@example.com
          EMAIL_PASSWORD=temp-password
          EMAIL_FROM=noreply@pms.omyratech.com
          EMAIL_DEV_MODE=true
          EOF
          
          # Generate SSL certificates
          echo "🔒 Generating SSL certificates..."
          mkdir -p ssl/certs
          
          # Simple SSL certificate generation
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout ssl/certs/server.key \
            -out ssl/certs/server.crt \
            -subj "/C=US/ST=State/L=City/O=Organization/CN=pms.omyratech.com" \
            -addext "subjectAltName=DNS:pms.omyratech.com,DNS:www.pms.omyratech.com,DNS:localhost,IP:127.0.0.1"
          
          # Set permissions
          chmod 600 ssl/certs/server.key
          chmod 644 ssl/certs/server.crt
          
          # Use HTTP-first configuration for now
          cp nginx/nginx-mixed.conf nginx/nginx-ssl.conf || echo "Mixed config not found, using existing"
          
          # Deploy
          docker compose -f docker-compose.production.yml down || true
          docker compose -f docker-compose.production.yml up -d --build
          
          # Wait and verify
          sleep 30
          docker ps
          
          # Test basic connectivity
          curl -f http://localhost/health || curl -f http://localhost || echo "Health check failed, but containers may still be starting"
          
          echo "🎉 Deployment completed!"
          echo "📍 Check: http://pms.omyratech.com"
