import { Response, NextFunction } from 'express';
import { AuthenticatedRequest } from '../middleware/auth.js';
export declare const getDashboardStats: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getAllUsers: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const createUser: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const updateUser: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const deleteUser: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const resetUserPassword: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const createProject: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const updateProject: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const deleteProject: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getProjectDetails: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getAllProjects: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getRoles: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const updateUserRole: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getAllClientsAdmin: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const assignClientToProject: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const removeClientFromProject: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getClientProjects: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const createAdmin: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getAdmin: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const listAdminUsers: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const updateAdmin: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const deleteAdmin: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const createTeamMember: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const updateTeamMember: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const deleteTeamMember: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getTeamMember: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getAllTeamMembers: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const updateAdminPrivileges: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getAdminPrivileges: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getAllAdmins: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const getAdminActivityLogs: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
export declare const updateProjectStatus: (req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>;
//# sourceMappingURL=adminController.d.ts.map